name: CI/CD uploads-files-services

on:
  push:
    branches: ["develop", "preproduction", "main"]
  workflow_dispatch:
    inputs:
      name:
        description: 'Manual workflow dispatch'
        required: true
        default: 'Reason to run the workflow'

env:
  APP_NAME: uploads-files-service
  NAMESPACE: default
  IMAGE_TAG: ${{ github.sha }}  
  GCP_REGISTRY: us-central1-docker.pkg.dev
  GCP_REPOSITORY: registry-uploads-files-service
  GCP_PROJECT_ID: eafit-415821
  GKE_CLUSTER: uploads-files-service-cluster
  GKE_ZONE: us-central1-c
  MONGO_CONNECTION: ${{secrets.MONGO_CONNECTION}}
  AUTHOR: ${{ vars.AUTHOR }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Google
        uses: docker/login-action@v1 
        with:
          registry: ${{ env.GCP_REGISTRY }}
          username: _json_key
          password: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.GCP_REGISTRY }}/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_REPOSITORY }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}
        
  deploy:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref_name }}
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Replace tokens
        uses: cschleiden/replace-tokens@v1.2
        with:
          files: '["k8s/*.yml"]'
 
      - name: Login to Google
        uses: docker/login-action@v1 
        with:
          registry: ${{ env.GCP_REGISTRY }}
          username: _json_key
          password: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ env.GCP_PROJECT }}
          service_account_key: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}
          export_default_credentials: true

      - name: Configure Docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker

      - name: Connect to GKE
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}        

      - name: Deploy Configmap to EKS
        working-directory: ./  
        run: kubectl apply -f ./k8s/configmap.yml

      - name: Deploy App to EKS
        working-directory: ./
        run: kubectl apply -f ./k8s/deployment.yml 

      - name: Deploy Service to EKS
        working-directory: ./
        run: kubectl apply -f ./k8s/service.yml
